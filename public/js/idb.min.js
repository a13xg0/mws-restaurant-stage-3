"use strict";!function(){function promisifyRequest(e){return new Promise(function(t,r){e.onsuccess=function(){t(e.result)},e.onerror=function(){r(e.error)}})}function promisifyRequestCall(e,t,r){var o,n=new Promise(function(n,i){promisifyRequest(o=e[t].apply(e,r)).then(n,i)});return n.request=o,n}function proxyProperties(e,t,r){r.forEach(function(r){Object.defineProperty(e.prototype,r,{get:function(){return this[t][r]},set:function(e){this[t][r]=e}})})}function proxyRequestMethods(e,t,r,o){o.forEach(function(o){o in r.prototype&&(e.prototype[o]=function(){return promisifyRequestCall(this[t],o,arguments)})})}function proxyMethods(e,t,r,o){o.forEach(function(o){o in r.prototype&&(e.prototype[o]=function(){return this[t][o].apply(this[t],arguments)})})}function proxyCursorRequestMethods(e,t,r,o){o.forEach(function(o){o in r.prototype&&(e.prototype[o]=function(){return function promisifyCursorRequestCall(e,t,r){var o=promisifyRequestCall(e,t,r);return o.then(function(e){if(e)return new Cursor(e,o.request)})}(this[t],o,arguments)})})}function Index(e){this._index=e}function Cursor(e,t){this._cursor=e,this._request=t}function ObjectStore(e){this._store=e}function Transaction(e){this._tx=e,this.complete=new Promise(function(t,r){e.oncomplete=function(){t()},e.onerror=function(){r(e.error)},e.onabort=function(){r(e.error)}})}function UpgradeDB(e,t,r){this._db=e,this.oldVersion=t,this.transaction=new Transaction(r)}function DB(e){this._db=e}proxyProperties(Index,"_index",["name","keyPath","multiEntry","unique"]),proxyRequestMethods(Index,"_index",IDBIndex,["get","getKey","getAll","getAllKeys","count"]),proxyCursorRequestMethods(Index,"_index",IDBIndex,["openCursor","openKeyCursor"]),proxyProperties(Cursor,"_cursor",["direction","key","primaryKey","value"]),proxyRequestMethods(Cursor,"_cursor",IDBCursor,["update","delete"]),["advance","continue","continuePrimaryKey"].forEach(function(e){e in IDBCursor.prototype&&(Cursor.prototype[e]=function(){var t=this,r=arguments;return Promise.resolve().then(function(){return t._cursor[e].apply(t._cursor,r),promisifyRequest(t._request).then(function(e){if(e)return new Cursor(e,t._request)})})})}),ObjectStore.prototype.createIndex=function(){return new Index(this._store.createIndex.apply(this._store,arguments))},ObjectStore.prototype.index=function(){return new Index(this._store.index.apply(this._store,arguments))},proxyProperties(ObjectStore,"_store",["name","keyPath","indexNames","autoIncrement"]),proxyRequestMethods(ObjectStore,"_store",IDBObjectStore,["put","add","delete","clear","get","getAll","getKey","getAllKeys","count"]),proxyCursorRequestMethods(ObjectStore,"_store",IDBObjectStore,["openCursor","openKeyCursor"]),proxyMethods(ObjectStore,"_store",IDBObjectStore,["deleteIndex"]),Transaction.prototype.objectStore=function(){return new ObjectStore(this._tx.objectStore.apply(this._tx,arguments))},proxyProperties(Transaction,"_tx",["objectStoreNames","mode"]),proxyMethods(Transaction,"_tx",IDBTransaction,["abort"]),UpgradeDB.prototype.createObjectStore=function(){return new ObjectStore(this._db.createObjectStore.apply(this._db,arguments))},proxyProperties(UpgradeDB,"_db",["name","version","objectStoreNames"]),proxyMethods(UpgradeDB,"_db",IDBDatabase,["deleteObjectStore","close"]),DB.prototype.transaction=function(){return new Transaction(this._db.transaction.apply(this._db,arguments))},proxyProperties(DB,"_db",["name","version","objectStoreNames"]),proxyMethods(DB,"_db",IDBDatabase,["close"]),["openCursor","openKeyCursor"].forEach(function(e){[ObjectStore,Index].forEach(function(t){t.prototype[e.replace("open","iterate")]=function(){var t=function toArray(e){return Array.prototype.slice.call(e)}(arguments),r=t[t.length-1],o=this._store||this._index,n=o[e].apply(o,t.slice(0,-1));n.onsuccess=function(){r(n.result)}}})}),[Index,ObjectStore].forEach(function(e){e.prototype.getAll||(e.prototype.getAll=function(e,t){var r=this,o=[];return new Promise(function(n){r.iterateCursor(e,function(e){e?(o.push(e.value),void 0===t||o.length!=t?e.continue():n(o)):n(o)})})})});var e={open:function(e,t,r){var o=promisifyRequestCall(indexedDB,"open",[e,t]),n=o.request;return n.onupgradeneeded=function(e){r&&r(new UpgradeDB(n.result,e.oldVersion,n.transaction))},o.then(function(e){return new DB(e)})},delete:function(e){return promisifyRequestCall(indexedDB,"deleteDatabase",[e])}};"undefined"!=typeof module?module.exports=e:self.idb=e}();