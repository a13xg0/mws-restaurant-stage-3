class DBHelper{static get DATABASE_URL(){return"http://localhost:1337"}static openDatabase(){return navigator.serviceWorker?idb.open("rest2",1,function(e){e.createObjectStore("restaurants",{keyPath:"id"})}):Promise.resolve()}static fetchRestaurants(e){fetch(`${DBHelper.DATABASE_URL}/restaurants`).then(e=>e.json()).then(t=>{PictureHelper.forwardCacheImages(t),t.forEach(e=>{DBHelper.storeRestaurantData(e)}),e(null,t)}).catch(t=>{DBHelper.openDatabase().then(t=>{t.transaction("restaurants").objectStore("restaurants").getAll().then(t=>{e(null,t)}).catch(t=>{e(`Request failed. Returned status of ${t}`,null)})})})}static fetchRestaurantById(e,t){fetch(`${DBHelper.DATABASE_URL}/restaurants?id=${e}`).then(e=>{if(404!==e.status)return e.json();t("Restaurant does not exist",null)}).then(e=>{DBHelper.storeRestaurantData(e),t(null,e)}).catch(a=>{DBHelper.openDatabase().then(a=>{a.transaction("restaurants").objectStore("restaurants").get(parseInt(e)).then(e=>{t(null,e)}).catch(e=>{t(`Request failed. Returned status of ${e}`,null)})})})}static storeRestaurantData(e){DBHelper.openDatabase().then(function(t){if(t){t.transaction("restaurants","readwrite").objectStore("restaurants").put(e)}})}static fetchRestaurantByCuisine(e,t){DBHelper.fetchRestaurants((a,r)=>{if(a)t(a,null);else{const a=r.filter(t=>t.cuisine_type===e);t(null,a)}})}static fetchRestaurantByNeighborhood(e,t){DBHelper.fetchRestaurants((a,r)=>{if(a)t(a,null);else{const a=r.filter(t=>t.neighborhood===e);t(null,a)}})}static fetchRestaurantByCuisineAndNeighborhood(e,t,a){DBHelper.fetchRestaurants((r,s)=>{if(r)a(r,null);else{let r=s;"all"!==e&&(r=r.filter(t=>t.cuisine_type===e)),"all"!==t&&(r=r.filter(e=>e.neighborhood===t)),a(null,r)}})}static fetchNeighborhoods(e){DBHelper.fetchRestaurants((t,a)=>{if(t)e(t,null);else{const t=a.map((e,t)=>a[t].neighborhood),r=t.filter((e,a)=>t.indexOf(e)===a);e(null,r)}})}static fetchCuisines(e){DBHelper.fetchRestaurants((t,a)=>{if(t)e(t,null);else{const t=a.map((e,t)=>a[t].cuisine_type),r=t.filter((e,a)=>t.indexOf(e)===a);e(null,r)}})}static urlForRestaurant(e){return`./restaurant.html?id=${e.id}`}static imageUrlForRestaurant(e){return`/img/${e.photograph}-800_1x.jpg`}static imageLQUrlForRestaurant(e){return`/img/${e.photograph}-low.jpg`}static mapMarkerForRestaurant(e,t){const a=new L.marker([e.latlng.lat,e.latlng.lng],{title:e.name,alt:e.name,url:DBHelper.urlForRestaurant(e)});return a.addTo(newMap),a}static setFavoriteMark(e,t){let a=JSON.parse(t.getAttribute("aria-checked"));a=!a,DBHelper.constructFavoriteMark(t,a),DBHelper.saveFavoriteMark(e.id,a)}static saveFavoriteMark(e,t){fetch(`${DBHelper.DATABASE_URL}/restaurants/${e}/?is_favorite=${t}`,{method:"PUT"})}static constructFavoriteMark(e,t){t=JSON.parse(t),e.setAttribute("aria-checked",t),e.className=!0===t?"fas fa-heart fav-btn":"far fa-heart fav-btn"}static loadReviews(e,t,a,r){fetch(`${DBHelper.DATABASE_URL}/reviews/?restaurant_id=${e}`).then(e=>e.json()).then(e=>{if(e&&e.length>0)e.forEach(e=>{r.appendChild(createReviewHTML(e,t))}),a.appendChild(r);else{const e=document.createElement("p");e.innerHTML="No reviews yet!",a.appendChild(e)}})}static sendReview(e,t,a,r){const s={restaurant_id:e,name:a,rating:t,comments:r};return fetch(`${DBHelper.DATABASE_URL}/reviews/`,{method:"POST",body:JSON.stringify(s)})}}