class DBHelper{static get DATABASE_URL(){return"http://localhost:1337/restaurants"}static openDatabase(){return navigator.serviceWorker?idb.open("rest2",1,function(t){t.createObjectStore("restaurants",{keyPath:"id"})}):Promise.resolve()}static fetchRestaurants(t){fetch(DBHelper.DATABASE_URL).then(t=>t.json()).then(e=>{PictureHelper.forwardCacheImages(e),e.forEach(t=>{DBHelper.storeRestaurantData(t)}),t(null,e)}).catch(e=>{DBHelper.openDatabase().then(e=>{e.transaction("restaurants").objectStore("restaurants").getAll().then(e=>{t(null,e)}).catch(e=>{t(`Request failed. Returned status of ${e}`,null)})})})}static fetchRestaurantById(t,e){fetch(`${DBHelper.DATABASE_URL}?id=${t}`).then(t=>{if(404!==t.status)return t.json();e("Restaurant does not exist",null)}).then(t=>{DBHelper.storeRestaurantData(t),e(null,t)}).catch(a=>{DBHelper.openDatabase().then(a=>{a.transaction("restaurants").objectStore("restaurants").get(parseInt(t)).then(t=>{e(null,t)}).catch(t=>{e(`Request failed. Returned status of ${t}`,null)})})})}static storeRestaurantData(t){DBHelper.openDatabase().then(function(e){if(e){e.transaction("restaurants","readwrite").objectStore("restaurants").put(t)}})}static fetchRestaurantByCuisine(t,e){DBHelper.fetchRestaurants((a,r)=>{if(a)e(a,null);else{const a=r.filter(e=>e.cuisine_type===t);e(null,a)}})}static fetchRestaurantByNeighborhood(t,e){DBHelper.fetchRestaurants((a,r)=>{if(a)e(a,null);else{const a=r.filter(e=>e.neighborhood===t);e(null,a)}})}static fetchRestaurantByCuisineAndNeighborhood(t,e,a){DBHelper.fetchRestaurants((r,n)=>{if(r)a(r,null);else{let r=n;"all"!==t&&(r=r.filter(e=>e.cuisine_type===t)),"all"!==e&&(r=r.filter(t=>t.neighborhood===e)),a(null,r)}})}static fetchNeighborhoods(t){DBHelper.fetchRestaurants((e,a)=>{if(e)t(e,null);else{const e=a.map((t,e)=>a[e].neighborhood),r=e.filter((t,a)=>e.indexOf(t)===a);t(null,r)}})}static fetchCuisines(t){DBHelper.fetchRestaurants((e,a)=>{if(e)t(e,null);else{const e=a.map((t,e)=>a[e].cuisine_type),r=e.filter((t,a)=>e.indexOf(t)===a);t(null,r)}})}static urlForRestaurant(t){return`./restaurant.html?id=${t.id}`}static imageUrlForRestaurant(t){return`/img/${t.photograph}-800_1x.jpg`}static imageLQUrlForRestaurant(t){return`/img/${t.photograph}-low.jpg`}static mapMarkerForRestaurant(t,e){const a=new L.marker([t.latlng.lat,t.latlng.lng],{title:t.name,alt:t.name,url:DBHelper.urlForRestaurant(t)});return a.addTo(newMap),a}static saveFavoriteMark(t,e){}}